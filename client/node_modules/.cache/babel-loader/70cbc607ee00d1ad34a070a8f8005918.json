{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { posts as p } from './posts.js'; //update state using hooks\n\nexport function Requests(action) {\n  _s();\n\n  const [posts, setPosts] = useRecoilValue(p);\n\n  switch (action) {\n    case 'FETCH_ALL':\n      setPosts(data);\n      return posts;\n\n    case 'CREATE':\n      //have a function that creates a post and adds it to the shit\n      return posts;\n\n    default:\n      return posts;\n  }\n}\n\n_s(Requests, \"bKe2+QsuKWyT2YfV7DdDQEKwhwI=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = Requests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Requests\");","map":{"version":3,"names":["useRecoilValue","useSetRecoilState","posts","p","Requests","action","setPosts","data"],"sources":["C:/Users/aarus/work/personal/memories/client/src/atoms/index.js"],"sourcesContent":["import { useRecoilValue, useSetRecoilState } from 'recoil'\r\nimport {posts as p } from './posts.js'\r\n//update state using hooks\r\nexport function Requests(action) {\r\n    const [posts,setPosts] = useRecoilValue(p);\r\n    \r\n    switch(action) {\r\n        case 'FETCH_ALL':\r\n            setPosts(data);\r\n            return posts\r\n        case 'CREATE':\r\n            //have a function that creates a post and adds it to the shit\r\n            return posts\r\n        default:\r\n            return posts\r\n    }\r\n\r\n}"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,QAAlD;AACA,SAAQC,KAAK,IAAIC,CAAjB,QAA0B,YAA1B,C,CACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;EAAA;;EAC7B,MAAM,CAACH,KAAD,EAAOI,QAAP,IAAmBN,cAAc,CAACG,CAAD,CAAvC;;EAEA,QAAOE,MAAP;IACI,KAAK,WAAL;MACIC,QAAQ,CAACC,IAAD,CAAR;MACA,OAAOL,KAAP;;IACJ,KAAK,QAAL;MACI;MACA,OAAOA,KAAP;;IACJ;MACI,OAAOA,KAAP;EARR;AAWH;;GAdeE,Q;UACaJ,c;;;KADbI,Q"},"metadata":{},"sourceType":"module"}