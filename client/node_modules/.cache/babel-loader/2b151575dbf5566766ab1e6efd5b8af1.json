{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { posts } from './posts.js'; //update state using hooks\n\nexport const Requests = action => {\n  _s();\n\n  switch (action) {\n    case 'FETCH_ALL':\n      const [posts, setPosts] = useRecoilValue(posts);\n      console.log(posts);\n\n    case 'CREATE':\n      //have a function that creates a post and adds it to the shit\n      return posts;\n\n    default:\n      return posts;\n  }\n};\n\n_s(Requests, \"bKe2+QsuKWyT2YfV7DdDQEKwhwI=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = Requests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Requests\");","map":{"version":3,"names":["useRecoilValue","useSetRecoilState","posts","Requests","action","setPosts","console","log"],"sources":["C:/Users/aarus/work/personal/memories/client/src/atoms/index.js"],"sourcesContent":["import { useRecoilValue, useSetRecoilState } from 'recoil'\r\nimport {posts} from './posts.js'\r\n//update state using hooks\r\n\r\nexport const Requests = (action) => {\r\n\r\n    switch(action) {\r\n        case 'FETCH_ALL':\r\n            const[posts,setPosts] = useRecoilValue(posts);\r\n            console.log(posts);\r\n        case 'CREATE':\r\n            //have a function that creates a post and adds it to the shit\r\n            return posts\r\n        default:\r\n            return posts\r\n    }\r\n\r\n}"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,QAAlD;AACA,SAAQC,KAAR,QAAoB,YAApB,C,CACA;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,MAAD,IAAY;EAAA;;EAEhC,QAAOA,MAAP;IACI,KAAK,WAAL;MACI,MAAK,CAACF,KAAD,EAAOG,QAAP,IAAmBL,cAAc,CAACE,KAAD,CAAtC;MACAI,OAAO,CAACC,GAAR,CAAYL,KAAZ;;IACJ,KAAK,QAAL;MACI;MACA,OAAOA,KAAP;;IACJ;MACI,OAAOA,KAAP;EARR;AAWH,CAbM;;GAAMC,Q;UAIuBH,c;;;KAJvBG,Q"},"metadata":{},"sourceType":"module"}