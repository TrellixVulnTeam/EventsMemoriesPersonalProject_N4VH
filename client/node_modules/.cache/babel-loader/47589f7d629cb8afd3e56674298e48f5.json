{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { posts as p } from './posts.js'; //update state using hooks\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Requests = (action, data) => {\n  _s();\n\n  const [posts, setPosts] = useRecoilValue(p);\n\n  switch (action) {\n    case 'FETCH_ALL':\n      return posts;\n\n    case 'CREATE':\n      //have a function that creates a post and adds it to the shit\n      return posts;\n\n    default:\n      return posts;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Requests, \"bKe2+QsuKWyT2YfV7DdDQEKwhwI=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = Requests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Requests\");","map":{"version":3,"names":["useRecoilValue","useSetRecoilState","posts","p","Requests","action","data","setPosts"],"sources":["C:/Users/aarus/work/personal/memories/client/src/atoms/index.js"],"sourcesContent":["import { useRecoilValue, useSetRecoilState } from 'recoil'\r\nimport {posts as p} from './posts.js'\r\n//update state using hooks\r\n\r\nexport const Requests = (action,data) => {  \r\n    const[posts,setPosts] = useRecoilValue(p)\r\n    switch(action) {\r\n        case 'FETCH_ALL':\r\n            return posts\r\n        case 'CREATE':\r\n            //have a function that creates a post and adds it to the shit\r\n            return posts\r\n        default:\r\n            return posts\r\n    }\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n\r\n}"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,QAAlD;AACA,SAAQC,KAAK,IAAIC,CAAjB,QAAyB,YAAzB,C,CACA;;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAAQC,IAAR,KAAiB;EAAA;;EACrC,MAAK,CAACJ,KAAD,EAAOK,QAAP,IAAmBP,cAAc,CAACG,CAAD,CAAtC;;EACA,QAAOE,MAAP;IACI,KAAK,WAAL;MACI,OAAOH,KAAP;;IACJ,KAAK,QAAL;MACI;MACA,OAAOA,KAAP;;IACJ;MACI,OAAOA,KAAP;EAPR;;EASA,oBACI,qCADJ;AAKH,CAhBM;;GAAME,Q;UACeJ,c;;;KADfI,Q"},"metadata":{},"sourceType":"module"}