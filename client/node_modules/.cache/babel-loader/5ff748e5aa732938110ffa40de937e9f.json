{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarus\\\\work\\\\personal\\\\memories\\\\client\\\\src\\\\App.js\";\nimport { React, useEffect } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport Form from \"./components/Forms/Form.js\";\nimport Posts from './components/Posts/Posts.js';\nimport useStyles from './styles.js';\nimport { GetPosts } from './actions/posts.js';\nimport { fetchPosts } from \"./api/index.js\";\nimport { Requests } from \"./atoms/index.js\";\nimport { posts as p, currentId as Id } from \"./atoms/posts.js\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport * as api from './api';\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport Home from \"./components/Home/Home.js\";\nimport Auth from \"./components/Auth/Auth.js\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; //navbar shows stuff based on user, and user's state will be passed down to form\n//if user is already logged in, navbar shows avatar(already implemeneted) else, redirects to auth\n//auth will sign the person in or check, and then the user will be redirected to home(navbar should update, cause need to update state)\n//can control requests by requiring a valid user (not null) otherwise request wont work\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  // const classes = useStyles();\n  // const setPosts = useSetRecoilState(p);\n  // const[curId,setId] = useRecoilValue(Id);\n  // useEffect(() => {\n  //      const GetPosts = async() => {\n  //         try {\n  //              var {data} = await api.fetchPosts();\n  //             setPosts(data);\n  //         } catch (error) {\n  //             console.log(error);\n  //         }\n  //     }\n  //     // const data = GetPosts();\n  //     GetPosts();\n  //     // const data =  GetPosts();\n  //     // setPosts(data);\n  // }, [curId]);\n  //works without curId as well(super weird)\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/auth\",\n          exact: true,\n          component: Auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Container","AppBar","Typography","Grow","Grid","Form","Posts","useStyles","GetPosts","fetchPosts","Requests","posts","p","currentId","Id","useRecoilValue","useSetRecoilState","api","Navbar","Home","Auth","BrowserRouter","Router","Routes","Route","App"],"sources":["C:/Users/aarus/work/personal/memories/client/src/App.js"],"sourcesContent":["import {React, useEffect} from \"react\";\r\nimport {Container, AppBar, Typography, Grow, Grid} from '@material-ui/core';\r\nimport Form from \"./components/Forms/Form.js\";\r\nimport Posts from './components/Posts/Posts.js';\r\nimport useStyles from './styles.js';\r\nimport {GetPosts} from './actions/posts.js';\r\nimport { fetchPosts } from \"./api/index.js\";\r\nimport { Requests } from \"./atoms/index.js\";\r\nimport {  posts as p, currentId as Id } from \"./atoms/posts.js\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport * as api from './api';\r\nimport Navbar from \"./components/Navbar/Navbar.js\";\r\nimport Home from \"./components/Home/Home.js\";\r\nimport Auth from \"./components/Auth/Auth.js\";\r\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\n\r\n\r\n//navbar shows stuff based on user, and user's state will be passed down to form\r\n//if user is already logged in, navbar shows avatar(already implemeneted) else, redirects to auth\r\n//auth will sign the person in or check, and then the user will be redirected to home(navbar should update, cause need to update state)\r\n//can control requests by requiring a valid user (not null) otherwise request wont work\r\n\r\n\r\nconst App = () => {\r\n    // const classes = useStyles();\r\n    \r\n    // const setPosts = useSetRecoilState(p);\r\n    // const[curId,setId] = useRecoilValue(Id);\r\n    \r\n    // useEffect(() => {\r\n    //      const GetPosts = async() => {\r\n    \r\n    //         try {\r\n    //              var {data} = await api.fetchPosts();\r\n    //             setPosts(data);\r\n    //         } catch (error) {\r\n    //             console.log(error);\r\n    //         }\r\n           \r\n    //     }\r\n    //     // const data = GetPosts();\r\n    //     GetPosts();\r\n    //     // const data =  GetPosts();\r\n    //     // setPosts(data);\r\n\r\n    // }, [curId]);\r\n    //works without curId as well(super weird)\r\n   \r\n    return(\r\n      \r\n    <Router>\r\n        <Container maxWidth='lg'>\r\n             <Navbar/> \r\n                <Routes>\r\n                    <Route  path=\"/\" exact component = {Home}/>\r\n                    <Route path = \"/auth\" exact component= {Auth}/>\r\n                </Routes>\r\n        </Container>\r\n        </Router>\r\n    )\r\n}\r\nexport default App;"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,UAA3B,EAAuCC,IAAvC,EAA6CC,IAA7C,QAAwD,mBAAxD;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAAUC,KAAK,IAAIC,CAAnB,EAAsBC,SAAS,IAAIC,EAAnC,QAA6C,kBAA7C;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAqD,kBAArD,C,CAGA;AACA;AACA;AACA;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;EACd;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA,oBAEA,QAAC,MAAD;IAAA,uBACI,QAAC,SAAD;MAAW,QAAQ,EAAC,IAApB;MAAA,wBACK,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADL,eAEQ,QAAC,MAAD;QAAA,wBACI,QAAC,KAAD;UAAQ,IAAI,EAAC,GAAb;UAAiB,KAAK,MAAtB;UAAuB,SAAS,EAAIN;QAApC;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,KAAD;UAAO,IAAI,EAAG,OAAd;UAAsB,KAAK,MAA3B;UAA4B,SAAS,EAAGC;QAAxC;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFR;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QAFA;AAYH,CArCD;;KAAMK,G;AAsCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}