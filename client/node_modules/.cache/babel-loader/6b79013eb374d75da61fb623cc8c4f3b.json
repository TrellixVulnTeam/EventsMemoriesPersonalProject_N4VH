{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useRecoilBridgeAcrossReactRoots_UNSTABLE } from 'recoil';\nimport * as api from '../api';\nimport { Requests } from '../atoms';\nimport { posts as p } from '../atoms/posts';\nimport { useSetRecoilState } from \"recoil\";\n\nfunction Subscriber() {\n  _s();\n\n  const setState = useSetRecoilState(myState);\n  useEffect(() => {\n    const subscriber = setupSubscription();\n    subscriber.onEvent(value => {\n      setState(value);\n    });\n    return () => subscriber.unsubscribe();\n  });\n  return null;\n}\n\n_s(Subscriber, \"Y63Of1huflQmeZWeyo7/OpSlgts=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c = Subscriber;\nexport const GetPosts = async () => {\n  _s2();\n\n  const setter = useSetRecoilState(p);\n\n  try {\n    var {\n      data\n    } = await api.fetchPosts(); // console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n_s2(GetPosts, \"1gfT4JPDPqsrTEkYsoQIqPjG5Cg=\", false, function () {\n  return [useSetRecoilState];\n});\n\n_c2 = GetPosts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Subscriber\");\n$RefreshReg$(_c2, \"GetPosts\");","map":{"version":3,"names":["useRecoilBridgeAcrossReactRoots_UNSTABLE","api","Requests","posts","p","useSetRecoilState","Subscriber","setState","myState","useEffect","subscriber","setupSubscription","onEvent","value","unsubscribe","GetPosts","setter","data","fetchPosts","error","console","log"],"sources":["C:/Users/aarus/work/personal/memories/client/src/actions/posts.js"],"sourcesContent":["import { useRecoilBridgeAcrossReactRoots_UNSTABLE } from 'recoil';\r\nimport * as api from '../api';\r\nimport { Requests } from '../atoms';\r\nimport { posts as p } from '../atoms/posts';\r\nimport { useSetRecoilState } from \"recoil\";\r\n\r\nfunction Subscriber() {\r\n    const setState = useSetRecoilState(myState);\r\n    useEffect(() => {\r\n      const subscriber = setupSubscription();\r\n      subscriber.onEvent(value => {\r\n        setState(value);\r\n      });\r\n      return () => subscriber.unsubscribe();\r\n    });\r\n    return null;\r\n  }\r\nexport const GetPosts = async() => {\r\n    \r\n    const setter = useSetRecoilState(p);\r\n    try {\r\n         var {data} = await api.fetchPosts();\r\n        // console.log(data);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n   \r\n}"],"mappings":";;;AAAA,SAASA,wCAAT,QAAyD,QAAzD;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,KAAK,IAAIC,CAAlB,QAA2B,gBAA3B;AACA,SAASC,iBAAT,QAAkC,QAAlC;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EAClB,MAAMC,QAAQ,GAAGF,iBAAiB,CAACG,OAAD,CAAlC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMC,UAAU,GAAGC,iBAAiB,EAApC;IACAD,UAAU,CAACE,OAAX,CAAmBC,KAAK,IAAI;MAC1BN,QAAQ,CAACM,KAAD,CAAR;IACD,CAFD;IAGA,OAAO,MAAMH,UAAU,CAACI,WAAX,EAAb;EACD,CANQ,CAAT;EAOA,OAAO,IAAP;AACD;;GAVMR,U;UACYD,iB;;;KADZC,U;AAWT,OAAO,MAAMS,QAAQ,GAAG,YAAW;EAAA;;EAE/B,MAAMC,MAAM,GAAGX,iBAAiB,CAACD,CAAD,CAAhC;;EACA,IAAI;IACC,IAAI;MAACa;IAAD,IAAS,MAAMhB,GAAG,CAACiB,UAAJ,EAAnB,CADD,CAEA;EACH,CAHD,CAGE,OAAOC,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AAEJ,CAVM;;IAAMJ,Q;UAEMV,iB;;;MAFNU,Q"},"metadata":{},"sourceType":"module"}