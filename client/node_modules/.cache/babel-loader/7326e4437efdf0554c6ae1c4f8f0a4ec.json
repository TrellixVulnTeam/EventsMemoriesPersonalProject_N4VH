{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarus\\\\work\\\\personal\\\\memories\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\"; // import {GoogleLogin} from 'react-google-login';\n\nimport { googleLogout } from '@react-oauth/google';\nimport * as api from '../../api';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\nimport useStyles from './styles.js';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField, Icon } from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  const switchSignUp = () => {\n    setIsSignUp(!isSignUp);\n    setShowPassword(false);\n  };\n\n  const login = useGoogleLogin({\n    flow: 'auth-code',\n    onSuccess: async codeResponse => {\n      const tokens = await api.getToken(codeResponse);\n      var user = jwt_decode(); //need to add token into recoil\n      //also jwt decode shit\n\n      console.log(tokens);\n    },\n    onError: errorResponse => console.log(errorResponse)\n  });\n\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {}; // const googleSuccess = async(response) => {\n  //     console.log(response);\n  // };\n  // const googleFailure = (response) => {\n  //     console.log('SignIn Unsuccessful');\n  //     console.log(response);\n  // };\n\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.Paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [isSignUp ? 'Sign Up' : 'Sign In', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), isSignUp && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignUp ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.googleButton,\n          color: \"primary\",\n          fullWidth: true,\n          onClick: () => login() // disabled={props.disabled} \n          ,\n          variant: \"contained\",\n          children: \"Google Sign-In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchSignUp,\n              children: isSignUp ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"Ab0MYQdqMCqR2meikuPGfaoqoE0=\", false, function () {\n  return [useGoogleLogin, useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","googleLogout","api","GoogleLogin","useGoogleLogin","jwt_decode","useStyles","Avatar","Button","Paper","Grid","Typography","Container","TextField","Icon","LockOutlinedIcon","Input","Auth","showPassword","setShowPassword","isSignUp","setIsSignUp","switchSignUp","login","flow","onSuccess","codeResponse","tokens","getToken","user","console","log","onError","errorResponse","handleShowPassword","handleSubmit","handleChange","classes","avatar","form","submit","googleButton"],"sources":["C:/Users/aarus/work/personal/memories/client/src/components/Auth/Auth.js"],"sourcesContent":["import {React, useState} from \"react\";\r\n// import {GoogleLogin} from 'react-google-login';\r\nimport { googleLogout } from '@react-oauth/google';\r\nimport * as api from '../../api';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\n\r\nimport useStyles from './styles.js';\r\nimport { Avatar, Button, Paper, Grid, Typography,Container, TextField, Icon } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport Input from \"./Input\";\r\nconst Auth = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignUp,setIsSignUp] = useState(false);\r\n    const switchSignUp = () => {\r\n        setIsSignUp(!isSignUp);\r\n        setShowPassword(false);\r\n    };\r\n    const login = useGoogleLogin({\r\n        flow:'auth-code',\r\n        onSuccess:async codeResponse => {\r\n            const tokens = await api.getToken(codeResponse);\r\n            var user = jwt_decode()\r\n            //need to add token into recoil\r\n            //also jwt decode shit\r\n            console.log(tokens);\r\n        },\r\n         onError:errorResponse => console.log(errorResponse),\r\n      });\r\n    const handleShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n        \r\n    };\r\n    const handleSubmit = () => {\r\n\r\n    };\r\n    const handleChange = () => {\r\n\r\n    };\r\n    // const googleSuccess = async(response) => {\r\n    //     console.log(response);\r\n    // };\r\n    // const googleFailure = (response) => {\r\n    //     console.log('SignIn Unsuccessful');\r\n    //     console.log(response);\r\n    // };\r\n    const classes = useStyles();\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.Paper} elevation = {3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography variant = \"h5\" >{isSignUp ? 'Sign Up' : 'Sign In'} </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing = {2}>\r\n                        {\r\n                            isSignUp && (\r\n                                <>\r\n                                    <Input name=\"firstName\" label=\"First Name\" handleChange = {handleChange} autoFocus half/>\r\n                                    <Input name=\"lastName\" label=\"Last Name\" handleChange = {handleChange} half/>\r\n                                </>\r\n\r\n                            )\r\n                        }\r\n                        <Input name = \"email\" label = \"Email Address\" handleChange = {handleChange} type = \"email\"/>\r\n                        <Input name = \"password\" label = \"Password\" handleChange = {handleChange} type = { showPassword ? 'text' : 'password'} handleShowPassword = {handleShowPassword} />\r\n                        {isSignUp && <Input name = \"confirmPassword\"  label = \"Repeat Password\" handleChange={handleChange} type=\"password\"/>\r\n                        }\r\n                    </Grid>\r\n                    \r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        {isSignUp ? 'Sign Up' : 'Sign In'}\r\n                    </Button>\r\n                    {/* <GoogleLogin\r\n                        onSuccess={credentialResponse => {\r\n                        console.log(credentialResponse);\r\n                            }}\r\n                        onError={() => {\r\n                        console.log('Login Failed');\r\n                            }}\r\n                    />;\r\n              */}\r\n                            <Button className={classes.googleButton} \r\n                            color=\"primary\" \r\n                            fullWidth onClick={() => login()} \r\n                            // disabled={props.disabled} \r\n                            variant = \"contained\">\r\n                            Google Sign-In \r\n                            </Button>\r\n                        \r\n                    <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Button onClick={switchSignUp}>\r\n                { isSignUp ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}