{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarus\\\\work\\\\personal\\\\memories\\\\client\\\\src\\\\components\\\\Forms\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './styles.js';\nimport FileBase from 'react-file-base64';\nimport * as api from '../../api';\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\nimport { posts as p, currentId as curId, currentId } from \"../../atoms/posts.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const setPosts = useSetRecoilState(p);\n  const [post, setPost] = useRecoilState(p);\n  const [currentId, setId] = useRecoilState(curId);\n  const Post = currentId ? post.find(p => p._id === currentId) : null; //2 things\n  //figure out to how call getPosts\n  //figure out why updating a post with getPosts results in a reset of the form to the original unchanged post\n\n  const GetPosts = async () => {\n    try {\n      var {\n        data\n      } = await api.fetchPosts();\n      setPosts(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const createPost = async post => {\n    try {\n      const {\n        data\n      } = await api.createPost(post); //if data doesnt replace data with post on the line with setPost\n\n      setPost(p => [...p, data]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updatePost = async (Id, post) => {\n    try {\n      const {\n        data\n      } = await api.updatePost(Id, post);\n      const pos = p.map(Post => Post._id === data._id ? data : Post);\n      setPost(pos);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId === '') {\n      createPost(postData);\n    } else {\n      updatePost(currentId, postData);\n    } //submit and then fprm data is immediatley reverted\n    //need to subscribe posts component to recoil so it gets updated asap\n\n\n    GetPosts();\n  };\n\n  useEffect(() => {\n    if (Post) {\n      setPostData(Post);\n    }\n\n    ;\n  }, [Post]);\n\n  const clear = () => {\n    setId(null);\n    set;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Event/Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: [/*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: clear,\n          fullWidth: true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Form, \"gaTf43Ubhd50tJdTr+jiHP6GpnQ=\", false, function () {\n  return [useStyles, useSetRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","useState","TextField","Button","Typography","Paper","useStyles","FileBase","api","useSetRecoilState","useRecoilState","posts","p","currentId","curId","Form","classes","postData","setPostData","creator","title","message","tags","selectedFile","setPosts","post","setPost","setId","Post","find","_id","GetPosts","data","fetchPosts","error","console","log","createPost","updatePost","Id","pos","map","handleSubmit","e","preventDefault","clear","set","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"sources":["C:/Users/aarus/work/personal/memories/client/src/components/Forms/Form.js"],"sourcesContent":["import {React, useEffect, useState} from \"react\";\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\r\nimport useStyles from './styles.js';\r\nimport FileBase from 'react-file-base64';\r\nimport * as api from '../../api';\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { posts as p, currentId as curId, currentId } from \"../../atoms/posts.js\";\r\n\r\n\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n    const [postData,setPostData] = useState({\r\n        creator:'', title:'', message:'', tags:'', selectedFile:''\r\n    });\r\n    \r\n    const setPosts = useSetRecoilState(p);\r\n    const [post, setPost] = useRecoilState(p);\r\n    const [currentId, setId] = useRecoilState(curId); \r\n    const Post = (currentId ? post.find((p)=> p._id === currentId) :  null);\r\n    \r\n    //2 things\r\n    //figure out to how call getPosts\r\n    //figure out why updating a post with getPosts results in a reset of the form to the original unchanged post\r\n    const GetPosts = async() => {\r\n    \r\n        try {\r\n             var {data} = await api.fetchPosts();\r\n            setPosts(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n       \r\n    }\r\n\r\n    const createPost = async(post) => {\r\n        try {\r\n            const {data}  = await api.createPost(post);\r\n            //if data doesnt replace data with post on the line with setPost\r\n            setPost(p =>[...p,data]);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const updatePost = async(Id, post) => {\r\n        try {\r\n            const {data} = await api.updatePost(Id, post);\r\n            const pos = p.map((Post) => Post._id === data._id ? data : Post);\r\n            setPost(pos); \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            if(currentId === '') {\r\n                createPost(postData);\r\n            } else {\r\n              updatePost(currentId, postData)\r\n            }//submit and then fprm data is immediatley reverted\r\n            //need to subscribe posts component to recoil so it gets updated asap\r\n             GetPosts();\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(Post) {setPostData(Post)\r\n        };\r\n    },[Post]);\r\n\r\n    const clear = () => {\r\n        setId(null);\r\n        set\r\n    }\r\n\r\n    return(\r\n           <Paper className={classes.paper}>\r\n               <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                   <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Event/Memory</Typography>\r\n                   <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e)=>setPostData({...postData,creator:e.target.value})}/>\r\n                   <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e)=>setPostData({...postData,title:e.target.value})}/>\r\n                   <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e)=>setPostData({...postData,message:e.target.value})}/>\r\n                   <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e)=>setPostData({...postData,tags:e.target.value})}/>\r\n                    <div className={classes.fileInput}>\r\n                        <FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile:base64})}/>\r\n                        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear}fullWidth>Clear</Button>\r\n\r\n                    </div>\r\n               </form>\r\n           </Paper> \r\n        )\r\n}\r\nexport default Form;"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,UAA3B,EAAuCC,KAAvC,QAAmD,mBAAnD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,QAAlD;AACA,SAASC,KAAK,IAAIC,CAAlB,EAAqBC,SAAS,IAAIC,KAAlC,EAAyCD,SAAzC,QAA0D,sBAA1D;;;AAIA,MAAME,IAAI,GAAG,MAAM;EAAA;;EACf,MAAMC,OAAO,GAAGV,SAAS,EAAzB;EACA,MAAM,CAACW,QAAD,EAAUC,WAAV,IAAyBjB,QAAQ,CAAC;IACpCkB,OAAO,EAAC,EAD4B;IACxBC,KAAK,EAAC,EADkB;IACdC,OAAO,EAAC,EADM;IACFC,IAAI,EAAC,EADH;IACOC,YAAY,EAAC;EADpB,CAAD,CAAvC;EAIA,MAAMC,QAAQ,GAAGf,iBAAiB,CAACG,CAAD,CAAlC;EACA,MAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBhB,cAAc,CAACE,CAAD,CAAtC;EACA,MAAM,CAACC,SAAD,EAAYc,KAAZ,IAAqBjB,cAAc,CAACI,KAAD,CAAzC;EACA,MAAMc,IAAI,GAAIf,SAAS,GAAGY,IAAI,CAACI,IAAL,CAAWjB,CAAD,IAAMA,CAAC,CAACkB,GAAF,KAAUjB,SAA1B,CAAH,GAA2C,IAAlE,CATe,CAWf;EACA;EACA;;EACA,MAAMkB,QAAQ,GAAG,YAAW;IAExB,IAAI;MACC,IAAI;QAACC;MAAD,IAAS,MAAMxB,GAAG,CAACyB,UAAJ,EAAnB;MACDT,QAAQ,CAACQ,IAAD,CAAR;IACH,CAHD,CAGE,OAAOE,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH;EAEJ,CATD;;EAWA,MAAMG,UAAU,GAAG,MAAMZ,IAAN,IAAe;IAC9B,IAAI;MACA,MAAM;QAACO;MAAD,IAAU,MAAMxB,GAAG,CAAC6B,UAAJ,CAAeZ,IAAf,CAAtB,CADA,CAEA;;MACAC,OAAO,CAACd,CAAC,IAAG,CAAC,GAAGA,CAAJ,EAAMoB,IAAN,CAAL,CAAP;IACH,CAJD,CAIE,OAAOE,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH;EACJ,CARD;;EASA,MAAMI,UAAU,GAAG,OAAMC,EAAN,EAAUd,IAAV,KAAmB;IAClC,IAAI;MACA,MAAM;QAACO;MAAD,IAAS,MAAMxB,GAAG,CAAC8B,UAAJ,CAAeC,EAAf,EAAmBd,IAAnB,CAArB;MACA,MAAMe,GAAG,GAAG5B,CAAC,CAAC6B,GAAF,CAAOb,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaE,IAAI,CAACF,GAAlB,GAAwBE,IAAxB,GAA+BJ,IAA/C,CAAZ;MACAF,OAAO,CAACc,GAAD,CAAP;IACH,CAJD,CAIE,OAAON,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH;EACJ,CARD;;EASA,MAAMQ,YAAY,GAAIC,CAAD,IAAO;IACpBA,CAAC,CAACC,cAAF;;IACA,IAAG/B,SAAS,KAAK,EAAjB,EAAqB;MACjBwB,UAAU,CAACpB,QAAD,CAAV;IACH,CAFD,MAEO;MACLqB,UAAU,CAACzB,SAAD,EAAYI,QAAZ,CAAV;IACD,CANmB,CAMnB;IACD;;;IACCc,QAAQ;EAChB,CATD;;EAWA/B,SAAS,CAAC,MAAK;IACX,IAAG4B,IAAH,EAAS;MAACV,WAAW,CAACU,IAAD,CAAX;IACT;;IAAA;EACJ,CAHQ,EAGP,CAACA,IAAD,CAHO,CAAT;;EAKA,MAAMiB,KAAK,GAAG,MAAM;IAChBlB,KAAK,CAAC,IAAD,CAAL;IACAmB,GAAG;EACN,CAHD;;EAKA,oBACO,QAAC,KAAD;IAAO,SAAS,EAAE9B,OAAO,CAAC+B,KAA1B;IAAA,uBACI;MAAM,YAAY,EAAC,KAAnB;MAAyB,UAAU,MAAnC;MAAoC,SAAS,EAAG,GAAE/B,OAAO,CAACgC,IAAK,IAAGhC,OAAO,CAACiC,IAAK,EAA/E;MAAkF,QAAQ,EAAEP,YAA5F;MAAA,wBACI,QAAC,UAAD;QAAY,OAAO,EAAC,IAApB;QAAA,WAA0B7B,SAAS,GAAG,SAAH,GAAe,UAAlD;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,SAAD;QAAW,IAAI,EAAC,SAAhB;QAA0B,OAAO,EAAC,UAAlC;QAA6C,KAAK,EAAC,SAAnD;QAA6D,SAAS,MAAtE;QAAuE,KAAK,EAAEI,QAAQ,CAACE,OAAvF;QAAgG,QAAQ,EAAGwB,CAAD,IAAKzB,WAAW,CAAC,EAAC,GAAGD,QAAJ;UAAaE,OAAO,EAACwB,CAAC,CAACO,MAAF,CAASC;QAA9B,CAAD;MAA1H;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,SAAD;QAAW,IAAI,EAAC,OAAhB;QAAwB,OAAO,EAAC,UAAhC;QAA2C,KAAK,EAAC,OAAjD;QAAyD,SAAS,MAAlE;QAAmE,KAAK,EAAElC,QAAQ,CAACG,KAAnF;QAA0F,QAAQ,EAAGuB,CAAD,IAAKzB,WAAW,CAAC,EAAC,GAAGD,QAAJ;UAAaG,KAAK,EAACuB,CAAC,CAACO,MAAF,CAASC;QAA5B,CAAD;MAApH;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII,QAAC,SAAD;QAAW,IAAI,EAAC,SAAhB;QAA0B,OAAO,EAAC,UAAlC;QAA6C,KAAK,EAAC,SAAnD;QAA6D,SAAS,MAAtE;QAAuE,KAAK,EAAElC,QAAQ,CAACI,OAAvF;QAAgG,QAAQ,EAAGsB,CAAD,IAAKzB,WAAW,CAAC,EAAC,GAAGD,QAAJ;UAAaI,OAAO,EAACsB,CAAC,CAACO,MAAF,CAASC;QAA9B,CAAD;MAA1H;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI,QAAC,SAAD;QAAW,IAAI,EAAC,MAAhB;QAAuB,OAAO,EAAC,UAA/B;QAA0C,KAAK,EAAC,MAAhD;QAAuD,SAAS,MAAhE;QAAiE,KAAK,EAAElC,QAAQ,CAACK,IAAjF;QAAuF,QAAQ,EAAGqB,CAAD,IAAKzB,WAAW,CAAC,EAAC,GAAGD,QAAJ;UAAaK,IAAI,EAACqB,CAAC,CAACO,MAAF,CAASC;QAA3B,CAAD;MAAjH;QAAA;QAAA;QAAA;MAAA,QALJ,eAMK;QAAK,SAAS,EAAEnC,OAAO,CAACoC,SAAxB;QAAA,wBACI,QAAC,QAAD;UAAU,IAAI,EAAC,MAAf;UAAsB,QAAQ,EAAE,KAAhC;UAAuC,MAAM,EAAE;YAAA,IAAC;cAACC;YAAD,CAAD;YAAA,OAAcnC,WAAW,CAAC,EAAC,GAAGD,QAAJ;cAAcM,YAAY,EAAC8B;YAA3B,CAAD,CAAzB;UAAA;QAA/C;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UAAQ,SAAS,EAAErC,OAAO,CAACsC,YAA3B;UAAyC,OAAO,EAAC,WAAjD;UAA6D,KAAK,EAAC,SAAnE;UAA6E,IAAI,EAAC,OAAlF;UAA0F,IAAI,EAAC,QAA/F;UAAwG,SAAS,MAAjH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,MAAD;UAAQ,OAAO,EAAC,WAAhB;UAA4B,KAAK,EAAC,WAAlC;UAA8C,IAAI,EAAC,OAAnD;UAA2D,OAAO,EAAET,KAApE;UAA0E,SAAS,MAAnF;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QANL;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADP;AAiBH,CAjFD;;GAAM9B,I;UACcT,S,EAKCG,iB,EACOC,c,EACGA,c;;;KARzBK,I;AAkFN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}