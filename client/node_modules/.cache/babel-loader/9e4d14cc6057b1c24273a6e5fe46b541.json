{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarus\\\\work\\\\personal\\\\memories\\\\client\\\\src\\\\components\\\\Forms\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './styles.js';\nimport FileBase from 'react-file-base64';\nimport * as api from '../../api';\nimport { useRecoilState } from \"recoil\";\nimport { posts as p, currentId as curId } from \"../../atoms/posts.js\";\nimport { users } from \"../../atoms/users.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  var _user$result;\n\n  const classes = useStyles();\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const [posts, setPosts] = useRecoilState(p);\n  const [currentId, setId] = useRecoilState(curId);\n  const Post = currentId ? posts.find(p => p._id === currentId) : null;\n  const [user, setUser] = useRecoilState(users);\n  useEffect(() => {\n    if (Post) {\n      setPostData(Post);\n    }\n\n    ;\n  }, [Post]);\n\n  if (!(user !== null && user !== void 0 && (_user$result = user.result) !== null && _user$result !== void 0 && _user$result.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to Create Events and interact with other events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n  const createPost = async POSTS => {\n    try {\n      const {\n        data\n      } = await api.createPost(POSTS); //if data doesnt replace data with post on the line with setPost\n\n      setPosts(posts => [...posts, data]);\n      console.log(posts.length);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updatePost = async (Id, post) => {\n    try {\n      const {\n        data\n      } = await api.updatePost(Id, post);\n      const pos = posts.map(Post => (Post === null || Post === void 0 ? void 0 : Post._id) === (data === null || data === void 0 ? void 0 : data._id) ? data : Post);\n      setPosts(pos);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = e => {\n    setPostData({ ...postData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId === '') {\n      var _user$result2;\n\n      createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      });\n    } else {\n      var _user$result3;\n\n      updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name\n      });\n    } //submit and then fprm data is immediatley reverted\n    //need to subscribe posts component to recoil so it gets updated asap\n\n\n    clear();\n  };\n\n  const clear = () => {\n    setId('');\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Event/Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: [/*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: clear,\n          fullWidth: true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Form, \"3NAh5uOeX0ETALEyIPCibB2BlJE=\", false, function () {\n  return [useStyles, useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","useState","TextField","Button","Typography","Paper","useStyles","FileBase","api","useRecoilState","posts","p","currentId","curId","users","Form","classes","postData","setPostData","title","message","tags","selectedFile","setPosts","setId","Post","find","_id","user","setUser","result","name","paper","createPost","POSTS","data","console","log","length","error","updatePost","Id","post","pos","map","handleChange","e","target","value","handleSubmit","preventDefault","clear","root","form","split","fileInput","base64","buttonSubmit"],"sources":["C:/Users/aarus/work/personal/memories/client/src/components/Forms/Form.js"],"sourcesContent":["import {React, useEffect, useState} from \"react\";\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\r\nimport useStyles from './styles.js';\r\nimport FileBase from 'react-file-base64';\r\nimport * as api from '../../api';\r\nimport {useRecoilState } from \"recoil\";\r\nimport { posts as p, currentId as curId} from \"../../atoms/posts.js\";\r\nimport { users } from \"../../atoms/users.js\";\r\n\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n    const [postData,setPostData] = useState({\r\n        title:'', message:'', tags:'', selectedFile:''\r\n    });\r\n    \r\n    const [posts, setPosts] = useRecoilState(p);\r\n    const [currentId, setId] = useRecoilState(curId); \r\n    const Post = (currentId ? posts.find((p)=> p._id === currentId) :  null);\r\n    const [user, setUser] = useRecoilState(users)\r\n    \r\n    useEffect(()=> {\r\n        if(Post) {setPostData(Post)};\r\n    },[Post]);\r\n    \r\n    if(!user?.result?.name) {\r\n        return (\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    Please Sign In to Create Events and interact with other events\r\n                </Typography>\r\n            </Paper>\r\n        )\r\n    }\r\n    const createPost = async(POSTS) => {\r\n        try {\r\n            const {data}  = await api.createPost(POSTS);\r\n            //if data doesnt replace data with post on the line with setPost\r\n            setPosts((posts) =>[...posts,data]);\r\n            console.log(posts.length);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const updatePost = async(Id, post) => {\r\n        try {\r\n            const {data} = await api.updatePost(Id, post);\r\n            const pos = posts.map((Post) => Post?._id === data?._id ? data : Post);\r\n            setPosts(pos); \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    const handleChange = (e) => {\r\n        setPostData({...postData, [e.target.name]: e.target.value});\r\n\r\n    };\r\n    const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            if(currentId === '') {\r\n                createPost({...postData, name:user?.result?.name });\r\n            } else {\r\n              updatePost(currentId, {...postData, name:user?.result?.name })\r\n            }//submit and then fprm data is immediatley reverted\r\n            //need to subscribe posts component to recoil so it gets updated asap\r\n            clear();\r\n    }\r\n  \r\n\r\n    \r\n\r\n    const clear = () => {\r\n        setId('');\r\n        setPostData({\r\n            title:'', message:'', tags:'', selectedFile:'',\r\n        })\r\n    }\r\n\r\n    return(\r\n           <Paper className={classes.paper}>\r\n               <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                   <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Event/Memory</Typography>\r\n                   <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e)=>setPostData({...postData,title:e.target.value})}/>\r\n                   <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e)=>setPostData({...postData,message:e.target.value})}/>\r\n                   <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e)=>setPostData({...postData,tags:e.target.value.split(',')})}/>\r\n                    <div className={classes.fileInput}>\r\n                        <FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile:base64})}/>\r\n                        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear}fullWidth>Clear</Button>\r\n\r\n                    </div>\r\n               </form>\r\n           </Paper> \r\n        )\r\n}\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}