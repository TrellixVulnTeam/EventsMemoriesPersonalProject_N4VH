{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarus\\\\work\\\\personal\\\\memories\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport * as api from '../../api';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { users as user } from \"../../atoms/users\";\nimport { useSetRecoilState } from \"recoil\";\nimport useStyles from './styles.js';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const setUser = useSetRecoilState(user);\n\n  const switchSignUp = () => {\n    setIsSignUp(!isSignUp);\n    setShowPassword(false);\n  };\n\n  const intialData = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [loginData, setLoginData] = useState(intialData);\n  const login = useGoogleLogin({\n    flow: 'auth-code',\n    onSuccess: async codeResponse => {\n      const tokens = await api.getToken(codeResponse);\n      var result = jwt_decode(tokens.data.id_token);\n      var token = tokens.data.id_token; //put decoded parts of token into local storage to ensure user data is there after a refresh\n\n      localStorage.setItem('profile', JSON.stringify({\n        result,\n        token\n      }));\n      setUser(JSON.parse(localStorage.getItem('profile')));\n      console.log(JSON.parse(localStorage.getItem('profile'))); //navigate to home screen with posts\n\n      navigate('/');\n    },\n    onError: errorResponse => console.log(errorResponse)\n  });\n\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const SignUp = async (data, nav) => {\n    try {\n      const userData = await api.signUp(data);\n      console.log(userData.data);\n      localStorage.setItem('profile', JSON.stringify(userData.data));\n      setUser(JSON.parse(localStorage.getItem('profile')));\n      nav('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const SignIn = async (data, nav) => {\n    try {\n      const userData = await api.signIn(data);\n      localStorage.setItem('profile', JSON.stringify(userData.data));\n      setUser(JSON.parse(localStorage.getItem('profile')));\n      nav('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignUp) {\n      SignUp(loginData, navigate);\n    } else {\n      SignIn(loginData, navigate);\n    }\n\n    console.log(loginData);\n  };\n\n  const handleChange = e => {\n    setLoginData({ ...loginData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const classes = useStyles(); //Auth Forms\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.Paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [isSignUp ? 'Sign Up' : 'Sign In', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), isSignUp && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignUp ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.googleButton,\n          color: \"primary\",\n          fullWidth: true,\n          onClick: () => login(),\n          variant: \"contained\",\n          children: \"Google Sign-In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchSignUp,\n              children: isSignUp ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"KtE2ORYjPdYydrMojZpKgcrGKqo=\", false, function () {\n  return [useNavigate, useSetRecoilState, useGoogleLogin, useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","api","useGoogleLogin","jwt_decode","useNavigate","users","user","useSetRecoilState","useStyles","Avatar","Button","Paper","Grid","Typography","Container","LockOutlinedIcon","Input","Auth","navigate","showPassword","setShowPassword","isSignUp","setIsSignUp","setUser","switchSignUp","intialData","firstName","lastName","email","password","confirmPassword","loginData","setLoginData","login","flow","onSuccess","codeResponse","tokens","getToken","result","data","id_token","token","localStorage","setItem","JSON","stringify","parse","getItem","console","log","onError","errorResponse","handleShowPassword","SignUp","nav","userData","signUp","error","SignIn","signIn","handleSubmit","e","preventDefault","handleChange","target","name","value","classes","avatar","form","submit","googleButton"],"sources":["C:/Users/aarus/work/personal/memories/client/src/components/Auth/Auth.js"],"sourcesContent":["import {React, useState} from \"react\";\r\nimport * as api from '../../api';\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { users as user } from \"../../atoms/users\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport useStyles from './styles.js';\r\nimport { Avatar, Button, Paper, Grid, Typography,Container} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Input from \"./Input\";\r\n\r\nconst Auth = () => {\r\n    const navigate = useNavigate();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignUp,setIsSignUp] = useState(false);\r\n    const setUser = useSetRecoilState(user);\r\n    const switchSignUp = () => {\r\n        setIsSignUp(!isSignUp);\r\n        setShowPassword(false);\r\n    };\r\n    const intialData = useState({firstName:'', lastName:'', email:'', password:'',confirmPassword:'' });\r\n\r\n    const [loginData,setLoginData] = useState(intialData);\r\n\r\n    const login = useGoogleLogin({\r\n        flow:'auth-code',\r\n        onSuccess:async codeResponse => {\r\n            const tokens = await api.getToken(codeResponse);\r\n            var result = jwt_decode(tokens.data.id_token);\r\n            var token = tokens.data.id_token;\r\n            //put decoded parts of token into local storage to ensure user data is there after a refresh\r\n            localStorage.setItem('profile', JSON.stringify({result,token}));\r\n            setUser(JSON.parse(localStorage.getItem('profile')));\r\n            console.log(JSON.parse(localStorage.getItem('profile')));\r\n            //navigate to home screen with posts\r\n            navigate('/');\r\n        },\r\n         onError:errorResponse => console.log(errorResponse),\r\n      });\r\n    const handleShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const SignUp = async(data,nav) => {\r\n        try {\r\n            const userData =  await api.signUp(data);\r\n            console.log(userData.data);\r\n            localStorage.setItem('profile',JSON.stringify(userData.data));\r\n            setUser(JSON.parse(localStorage.getItem('profile')));\r\n            nav('/')\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const SignIn = async(data, nav) => {\r\n        try {\r\n            const userData =  await api.signIn(data);\r\n\r\n            localStorage.setItem('profile', JSON.stringify(userData.data));\r\n            setUser(JSON.parse(localStorage.getItem('profile')));\r\n            nav('/')\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(isSignUp) {\r\n            SignUp(loginData, navigate);\r\n        } else {\r\n            SignIn(loginData,navigate)\r\n        }\r\n\r\n        console.log(loginData);\r\n    };\r\n    const handleChange = (e) => {\r\n        setLoginData({...loginData, [e.target.name]: e.target.value});\r\n    };\r\n    const classes = useStyles();\r\n\r\n    //Auth Forms\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.Paper} elevation = {3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography variant = \"h5\" >{isSignUp ? 'Sign Up' : 'Sign In'} </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing = {2}>\r\n                        {\r\n                            isSignUp && (\r\n                                <>\r\n                                    <Input name=\"firstName\" label=\"First Name\" handleChange = {handleChange} autoFocus half/>\r\n                                    <Input name=\"lastName\" label=\"Last Name\" handleChange = {handleChange} half/>\r\n                                </>\r\n\r\n                            )\r\n                        }\r\n                            <Input name = \"email\" label = \"Email Address\" handleChange = {handleChange} type = \"email\"/>\r\n                            <Input name = \"password\" label = \"Password\" handleChange = {handleChange} type = { showPassword ? 'text' : 'password'} handleShowPassword = {handleShowPassword} />\r\n                        {isSignUp && \r\n                            <Input name = \"confirmPassword\"  label = \"Repeat Password\" handleChange={handleChange} type=\"password\"/>\r\n                        }\r\n                    </Grid>\r\n                    \r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            {isSignUp ? 'Sign Up' : 'Sign In'}\r\n                        </Button>\r\n                        <Button className={classes.googleButton} \r\n                                color=\"primary\" \r\n                                fullWidth onClick={() => login()} \r\n                                variant = \"contained\">\r\n                                Google Sign-In \r\n                        </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                        <Button onClick={switchSignUp}>\r\n                            { isSignUp ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\r\n                        </Button>\r\n                    </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}