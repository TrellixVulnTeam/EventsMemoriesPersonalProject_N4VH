{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport { posts as p } from './posts.js'; //update state using hooks\n\nconst [posts, setPosts] = useRecoilValue(p);\nexport const Requests = action => {\n  _s();\n\n  const [posts, setPosts] = useRecoilValue(p);\n\n  switch (action) {\n    case 'FETCH_ALL':\n      return posts;\n\n    case 'CREATE':\n      //have a function that creates a post and adds it to the shit\n      return posts;\n\n    default:\n      return posts;\n  }\n};\n\n_s(Requests, \"bKe2+QsuKWyT2YfV7DdDQEKwhwI=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = Requests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Requests\");","map":{"version":3,"names":["useRecoilValue","useSetRecoilState","posts","p","setPosts","Requests","action"],"sources":["C:/Users/aarus/work/personal/memories/client/src/atoms/index.js"],"sourcesContent":["import { useRecoilValue, useSetRecoilState } from 'recoil'\r\nimport {posts as p } from './posts.js'\r\n//update state using hooks\r\nconst [posts,setPosts] = useRecoilValue(p);\r\n\r\nexport const Requests = (action) => {\r\n    const [posts,setPosts] = useRecoilValue(p);\r\n\r\n    switch(action) {\r\n        case 'FETCH_ALL':\r\n            return posts\r\n        case 'CREATE':\r\n            //have a function that creates a post and adds it to the shit\r\n            return posts\r\n        default:\r\n            return posts\r\n    }\r\n\r\n}"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,QAAlD;AACA,SAAQC,KAAK,IAAIC,CAAjB,QAA0B,YAA1B,C,CACA;;AACA,MAAM,CAACD,KAAD,EAAOE,QAAP,IAAmBJ,cAAc,CAACG,CAAD,CAAvC;AAEA,OAAO,MAAME,QAAQ,GAAIC,MAAD,IAAY;EAAA;;EAChC,MAAM,CAACJ,KAAD,EAAOE,QAAP,IAAmBJ,cAAc,CAACG,CAAD,CAAvC;;EAEA,QAAOG,MAAP;IACI,KAAK,WAAL;MACI,OAAOJ,KAAP;;IACJ,KAAK,QAAL;MACI;MACA,OAAOA,KAAP;;IACJ;MACI,OAAOA,KAAP;EAPR;AAUH,CAbM;;GAAMG,Q;UACgBL,c;;;KADhBK,Q"},"metadata":{},"sourceType":"module"}